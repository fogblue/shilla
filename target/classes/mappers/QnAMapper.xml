<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QnAMapper">
	<resultMap id="qna"
		type="iot5.project.shilla.model.QnA">
		<result property="id" column="id" />
		<result property="ecategory" column="ecategory" />
		<result property="enqType" column="enq_type" />
		<result property="reservNo" column="reserv_no" />
		<result property="weddingDate" column="wedding_date" />
		<result property="qnaType" column="qna_type" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="regDate" column="reg_date" />
		<result property="editDate" column="edit_date" />
		<result property="ipAddress" column="ip_address" />
		<result property="memberId" column="member_id" />
		<result property="hotelCate" column="hotel_category" />
		<result property="datepickerS" column="datepickerS" />
		<result property="datepickerE" column="datepickerE" />
	</resultMap>
	<!-- ######## -->
	<!-- ##입력## -->
	<!-- ######## -->
	<!-- 문의사항 글을 쓴다 -->
	<insert id="insertQnA" parameterType="iot5.project.shilla.model.QnA" 
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO qna (
			ecategory, enq_type, reserv_no, wedding_date, qna_type,
			subject, content, reg_date, edit_date, ip_address, member_id, hotel_category
		) VALUES (
			#{ecategory}, #{enqType}, #{reservNo}, #{weddingDate}, #{qnaType}, #{subject}, #{content}, now(), now(), #{ipAddress}, #{memberId}, #{hotelCate}
		)
	</insert>
	
	<!-- ######## -->
	<!-- ##수정## -->
	<!-- ######## -->
	<!-- 문의사항 글 정보를 변경한다 : 멤버 삭제를 위한 참조키 제거 -->
	<update id="updateQnAMemberOut" parameterType="iot5.project.shilla.model.QnA">
		UPDATE qna SET
			member_id=NULL, edit_date=now()
		WHERE member_id=#{memberId}
	</update>
	
	<!-- ######## -->
	<!-- ##삭제## -->
	<!-- ######## -->
	
	<!-- ######## -->
	<!-- ##조회## -->
	<!-- ######## -->
	<!-- 문의사항 글 번호로 검색한다 -->
	<select id="selectQnAById" parameterType="iot5.project.shilla.model.QnA" resultMap="qna">
		SELECT ecategory, enq_type, reserv_no, wedding_date, qna_type,
    			subject, content, DATE_FORMAT(reg_date, "%Y-%m-%d %H:%i:%S") as reg_date, edit_date, ip_address, member_id, hotel_category
    	FROM   qna
    	WHERE  id=#{id}
	</select>
	<!-- 회원번호를 사용하여 문의사항 글 갯수를 조회한다 -->
	<select id="selectQnACount" parameterType="iot5.project.shilla.model.QnA" resultType="int">
		SELECT count(id)
		FROM   qna
		WHERE  member_id=#{memberId}
	</select>
	<!-- 회원번호와 수정날짜를 비교하여 문의사항 글 갯수를 조회한다 -->
	<select id="selectQnACountByDate" parameterType="iot5.project.shilla.model.QnA" resultType="int">
		SELECT count(id)
		FROM   qna
		WHERE  member_id=#{memberId} AND (edit_date BETWEEN #{datepickerS} AND #{datepickerE})
	</select>
	<!-- 회원번호를 사용하여 문의사항의 리스트를 조회한다 -->
	<select id="selectQnAList" parameterType="iot5.project.shilla.model.QnA" resultMap="qna">
		SELECT id, hotel_category, enq_type, subject, DATE_FORMAT(reg_date, '%Y-%m-%d') as reg_date   
		FROM   qna
		WHERE  member_id=#{memberId}
		ORDER BY id DESC
	</select>
	<!-- 회원번호와 수정날짜를 비교하여 문의사항의 리스트를 조회한다 -->
	<select id="selectQnAListByDate" parameterType="iot5.project.shilla.model.QnA" resultMap="qna">
		SELECT id, hotel_category, enq_type, subject, DATE_FORMAT(reg_date, '%Y-%m-%d') as reg_date   
		FROM   qna
		WHERE  member_id=#{memberId} AND (edit_date BETWEEN #{datepickerS} AND #{datepickerE})
		ORDER BY id DESC
	</select>
	<!-- 문의사항 글의 상세정보를 조회한다 -->
    <select id="selectQnA" parameterType="iot5.project.shilla.model.QnA" resultMap="qna">
    	SELECT id, ecategory, enq_type, reserv_no, wedding_date, qna_type,
    			subject, content, reg_date, edit_date, ip_address, member_id, hotel_category
    	FROM   qna
    	WHERE  member_id=#{memberId}
    </select>
	
</mapper>